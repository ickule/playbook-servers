# {{ ansible_managed }}

---
version: "Compose specification"

services:
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7878:7878
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker.volumes }}/radarr:/config"
      - "{{ data}}:/data"

  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - 8989:8989
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker.volumes }}/sonarr:/config"
      - "{{ data}}:/data"

  readarr:
    container_name: readarr
    image: lscr.io/linuxserver/readarr:develop
    ports:
      - 8787:8787
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker.volumes }}/readarr:/config"
      - "{{ data}}:/data"
    restart: unless-stopped

  lidarr:
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr:latest
    ports:
      - 8686:8686
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker.volumes }}/lidarr:/config"
      - "{{ data}}:/data"
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    ports:
      - 6767:6767
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker.volumes }}/bazarr:/config"
      - "{{ data}}/media:/data/media"

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    ports:
      - 9696:9696
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
    volumes:
      - "{{ docker.volumes }}/prowlarr:/config"


  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      - TZ={{ timezone }}
    ports:
      - 8191:8191
    restart: unless-stopped

  jellyfin:
    container_name: jellyfin
    image: lscr.io/linuxserver/jellyfin:latest
    restart: unless-stopped
    group_add:
      - "{{ render_gid }}"
    ports:
      - 8096:8096
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker.volumes }}/jellyfin/config:/config"
      - "{{ data}}/media:/data/media"

  qbittorrent:
    container_name: qbittorrent
    build:
      pull: true
      context: qbittorrent-wireguard
      dockerfile: Dockerfile
    privileged: true
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    environment:
      - PUID={{ ansible_user_uid }}
      - PGID={{ ansible_user_gid }}
      - TZ={{ timezone }}
      - WEBUI_PORT=8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker.volumes }}/qbittorrent/config:/config"
      - "{{ data}}/torrents:/data/torrents"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
      - 51820:51820/udp
